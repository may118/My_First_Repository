---
title: "Plot TPD Rs"
output: rs_plots
---

For our assignment, we want to plot the daily average of 5 chambers for 5 years (2014 to 2018) at our site Turkey Point Deciduous.

First, we need to read the data from the matlab file containing all of the data points and for that, we define a function that uses the R.matlab library.
```{r}
#' Uses R.matlab to read .mat data file into R
#'
#' @param name the name of a matlab file
#' @return The R output version of data
#' @examples
#' data = readData('inputData.mat')

readData <- function(name)
{
  library(R.matlab)
  #stores the read matlab data in a list and returns that
  data <- R.matlab::readMat(name)
  return(data)
}
```


We also want to find the daily average of the chambers to account for variability between each of the chambers. 
```{r}
#' Uses inported Rs data to find the average of each year
#'
#' @param data list from imported matlab data
#' @param idx the index of the year you like
#'            1 = 2014
#'            2 = 2015
#'            3 = 2016
#'            4 = 2017
#'            5 = 2018
#' @return average data
#' @examples
#' findAvg(rsIn)

findAvg <- function(data,idx)
{
  #gets the list within the imported list
  dataIn <- data[[1]]

  #get the year of the data
  data_idx <- dataIn[[idx]]

  #gets number of rows of the matrix and adds a NaN column
  data_idx = cbind(data_idx, c(replicate(dim(data_idx)[1],NaN)))

  #for loop to get the average of that row
  for(i in 1:dim(data_idx)[1])
  {
    #omits any NaN
    data_idx[i,4] = mean(na.omit(data_idx[i,]))
  }

  return(data_idx[,4])

}
```

Just in case we have them in seperate files, we can use this code which references the subdirectory:
```{r eval = FALSE}
source(".//R//findAvg.R")
source("./R//readData.R")
```

Now we can use the function we created to read data from a matlab file without referencing the name directly
```{r}
#import data from chamber matlab file
rsIn = readData('chamData.mat')
```

Afterwards, we can find the average of the chambers for 5 years by creating a list that contains the 5 years data points 
```{r}
master = list()
i = 1

while(i<6)
{
  master[[i]] = findAvg(rsIn,i)
  i = i+1
}
```

Now that we have the data, we want to show it in a couple of plots. We start by creating stacked empty data plots.
```{r}
#changing the margins of the data
par(mar = c(1,1,1,1))
par(mfrow=c(5,1))
```

Now we want to run a loop to plot each year within the plots 
```{r}
#number for starting year
year = 2014

#plot the 5 years
for (i in 1:5)
{
  plot(master[[i]], pch = 16, main = year, xlab = "Day of Year", ylab = "Rs (Âµmol CO2/m2/s)")
  
  #set custom x axis
  axis(1, seq(0,365,25))
  
  #set custom y axis
  axis(2, seq(0,12,2))
  
  year = year+1
}
```
