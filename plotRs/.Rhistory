i = 1
#findAvg(rsIn,i)
while(i<5)
{
master = append(master[i], findAvg(rsIn,i))
i = i+1
}
View(master)
master = list()
i = 1
#
while(i<5)
{
master[i] = findAvg(rsIn,i)
i = i+1
}
master = list(5)
i = 1
#
while(i<5)
{
master[i] = findAvg(rsIn,i)
i = i+1
}
master = list()
master[1] = c(1,2,3,34)
master[2] = c(1,2,3,38)
master = list()
i = 1
while(i<5)
{
master[[i]] = findAvg(rsIn,i)
i = i+1
}
View(master)
master = list()
i = 1
while(i<6)
{
master[[i]] = findAvg(rsIn,i)
i = i+1
}
View(master)
rem(rs_2014)
rm(rs_2014)
par(mfcol = c(5,1))
plot(master[[1]])
plot(master[1])
plot(master[[1]])
View(master)
master[[1]]
plot(master[[1]])
plot(findAvg(rsIn,1))
plot(findAvg(rsIn,1))
plot(master[[1]])
par("mar")
par(mar = c(1,1,1,1))
plot(master[[1]])
for (i in 1:5)
{
plot(master[i])
}
for (i in 1:5)
{
plot(master[[i]])
}
#changing the margins of the data
par(mar = c(1,1,1,1))
par(mfrow=c(5,1))
for (i in 1:5)
{
plot(master[[i]])
}
devtools::document()
devtools::document()
devtools::document()
rm(readFiles)
readData <- function(name)
{
library(R.matlab)
data <- readMat(name)
return(data)
}
devtools::document()
readData <- function(name)
{
library(R.matlab)
data <- readMat(name)
return(data)
}
findAvg <- function(data,idx)
{
#gets the list within the imported list
dataIn <- data[[1]]
#get the year of the data
data_idx <- dataIn[[idx]]
#gets number of rows of the matrix and adds a NaN column
data_idx = cbind(data_idx, c(replicate(dim(data_idx)[1],NaN)))
#for loop to get the average of that row
for(i in 1:dim(data_idx)[1])
{
#omits any NaN
data_idx[i,4] = mean(na.omit(data_idx[i,]))
}
return(data_idx[,4])
}
#import data from chamber matlab file
rsIn = readData('chamData.mat')
#find the average of each chamber for 5 years
master = list()
i = 1
while(i<6)
{
master[[i]] = findAvg(rsIn,i)
i = i+1
}
#plot a time series of the data
#changing the margins of the data
par(mar = c(1,1,1,1))
par(mfrow=c(5,1))
for (i in 1:5)
{
plot(master[[i]])
}
library(askpass)
library(assertthat)
detach("package:askpass", unload = TRUE)
detach("package:assertthat", unload = TRUE)
install.packages(c("backports", "digest", "hms", "pkgconfig", "rlang", "rmarkdown", "tinytex", "xfun"))
library(devtools)
devtools::use_vignette("my_vignette")
install.packages("devtools")
devtools::use_vignette("my_vignette")
install.packages("rmarkdown")
devtools::use_vignette("my_vignette")
library(pandoc)
devtools::use_vignettes()
library(R.matlab)
install.packages("E:/Insync/Classes/Geo - 712/Projects/Week 3/my-first-repo/plotRs_0.1.0.tar.gz", repos = NULL, type = "source")
while(i<6)
s
#need to reference the subdirectory in order for the devtools::document() to find the files
source(".//R//findAvg.R")
source("./R//readData.R")
#import data from chamber matlab file
rsIn = readData('chamData.mat')
#find the average of each chamber for 5 years
master = list()
i = 1
while(i<6)
{
master[[i]] = findAvg(rsIn,i)
i = i+1
}
#plot a time series of the data
#changing the margins of the data
par(mar = c(1,1,1,1))
par(mfrow=c(5,1))
#plot the 5 years
for (i in 1:5)
{
plot(master[[i]])
}
library(plotRs)
#' Uses R.matlab to read .mat data file into R
#'
#' @param name the name of a matlab file
#' @return The R output version of data
#' @examples
#' data = readData('inputData.mat')
readData <- function(name)
{
library(R.matlab)
#stores the read matlab data in a list and returns that
data <- R.matlab::readMat(name)
return(data)
}
#' Uses inported Rs data to find the average of each year
#'
#' @param data list from imported matlab data
#' @param idx the index of the year you like
#'            1 = 2014
#'            2 = 2015
#'            3 = 2016
#'            4 = 2017
#'            5 = 2018
#' @return average data
#' @examples
#' findAvg(rsIn)
findAvg <- function(data,idx)
{
#gets the list within the imported list
dataIn <- data[[1]]
#get the year of the data
data_idx <- dataIn[[idx]]
#gets number of rows of the matrix and adds a NaN column
data_idx = cbind(data_idx, c(replicate(dim(data_idx)[1],NaN)))
#for loop to get the average of that row
for(i in 1:dim(data_idx)[1])
{
#omits any NaN
data_idx[i,4] = mean(na.omit(data_idx[i,]))
}
return(data_idx[,4])
}
#import data from chamber matlab file
rsIn = readData('chamData.mat')
#' Uses R.matlab to read .mat data file into R
#'
#' @param name the name of a matlab file
#' @return The R output version of data
#' @examples
#' data = readData('inputData.mat')
readData <- function(name)
{
library(R.matlab)
#stores the read matlab data in a list and returns that
data <- R.matlab::readMat(name)
return(data)
}
#' Uses inported Rs data to find the average of each year
#'
#' @param data list from imported matlab data
#' @param idx the index of the year you like
#'            1 = 2014
#'            2 = 2015
#'            3 = 2016
#'            4 = 2017
#'            5 = 2018
#' @return average data
#' @examples
#' findAvg(rsIn)
findAvg <- function(data,idx)
{
#gets the list within the imported list
dataIn <- data[[1]]
#get the year of the data
data_idx <- dataIn[[idx]]
#gets number of rows of the matrix and adds a NaN column
data_idx = cbind(data_idx, c(replicate(dim(data_idx)[1],NaN)))
#for loop to get the average of that row
for(i in 1:dim(data_idx)[1])
{
#omits any NaN
data_idx[i,4] = mean(na.omit(data_idx[i,]))
}
return(data_idx[,4])
}
#import data from chamber matlab file
rsIn = readData('chamData.mat')
master = list()
i = 1
while(i<6)
{
master[[i]] = findAvg(rsIn,i)
i = i+1
}
#changing the margins of the data
par(mar = c(1,1,1,1))
par(mfrow=c(5,1))
#plot the 5 years
for (i in 1:5)
{
plot(master[[i]])
}
#' Uses R.matlab to read .mat data file into R
#'
#' @param name the name of a matlab file
#' @return The R output version of data
#' @examples
#' data = readData('inputData.mat')
readData <- function(name)
{
library(R.matlab)
#stores the read matlab data in a list and returns that
data <- R.matlab::readMat(name)
return(data)
}
#' Uses inported Rs data to find the average of each year
#'
#' @param data list from imported matlab data
#' @param idx the index of the year you like
#'            1 = 2014
#'            2 = 2015
#'            3 = 2016
#'            4 = 2017
#'            5 = 2018
#' @return average data
#' @examples
#' findAvg(rsIn)
findAvg <- function(data,idx)
{
#gets the list within the imported list
dataIn <- data[[1]]
#get the year of the data
data_idx <- dataIn[[idx]]
#gets number of rows of the matrix and adds a NaN column
data_idx = cbind(data_idx, c(replicate(dim(data_idx)[1],NaN)))
#for loop to get the average of that row
for(i in 1:dim(data_idx)[1])
{
#omits any NaN
data_idx[i,4] = mean(na.omit(data_idx[i,]))
}
return(data_idx[,4])
}
#import data from chamber matlab file
rsIn = readData('chamData.mat')
master = list()
i = 1
while(i<6)
{
master[[i]] = findAvg(rsIn,i)
i = i+1
}
#changing the margins of the data
par(mar = c(1,1,1,1))
par(mfrow=c(5,1))
#plot the 5 years
for (i in 1:5)
{
plot(master[[i]], xlab = "Rs", ylab = "Day of Year")
}
#plot the 5 years
for (i in 1:5)
{
plot(master[[i]], xlab = "Day of Year", ylab = "Rs (µmol CO^2 m^-2 s^-1)")
}
#plot the 5 years
for (i in 1:5)
{
plot(master[[i]], xlab = "Day of Year", ylab = "Rs (µmol CO^2^ m^-^2^ s^-^1^)")
}
#plot the 5 years
for (i in 1:5)
{
plot(master[[i]], xlab = "Day of Year", ylab = "Rs (µmol CO<sup>2</sup> m<sup>-2<sup> s<sup>-1</sup>)")
}
#plot the 5 years
for (i in 1:5)
{
plot(master[[i]], xlab = "Day of Year", ylab = "Rs (µmol CO2/m2/s)")
}
#plot the 5 years
for (i in 1:5)
{
plot(master[[i]], pch = 16, main = "Solid Circle", xlab = "Day of Year", ylab = "Rs (µmol CO2/m2/s)")
}
#plot the 5 years
for (i in 1:5)
{
plot(master[[i]], pch = 16, main = i, xlab = "Day of Year", ylab = "Rs (µmol CO2/m2/s)")
}
#number for year
y = 2014
#plot the 5 years
for (i in 1:5)
{
plot(master[[i]], pch = 16, main = y, xlab = "Day of Year", ylab = "Rs (µmol CO2/m2/s)")
y = y+1
}
#number for starting year
y = 2014
#plot the 5 years
for (i in 1:5)
{
plot(master[[i]], pch = 16, main = y, xlab = "Day of Year", ylab = "Rs (µmol CO2/m2/s)")
#set custom x axis
axis(1, seq(0,365,25))
y = y+1
}
#number for starting year
y = 2014
#plot the 5 years
for (i in 1:5)
{
plot(master[[i]], pch = 16, main = y, xlab = "Day of Year", ylab = "Rs (µmol CO2/m2/s)")
#set custom x axis
axis(1, seq(0,365,30))
y = y+1
}
#number for starting year
y = 2014
#plot the 5 years
for (i in 1:5)
{
plot(master[[i]], pch = 16, main = y, xlab = "Day of Year", ylab = "Rs (µmol CO2/m2/s)")
#set custom x axis
axis(1, seq(0,365,35))
y = y+1
}
#number for starting year
y = 2014
#plot the 5 years
for (i in 1:5)
{
plot(master[[i]], pch = 16, main = y, xlab = "Day of Year", ylab = "Rs (µmol CO2/m2/s)")
#set custom x axis
axis(1, seq(0,365,25))
y = y+1
}
#number for starting year
y = 2014
#plot the 5 years
for (i in 1:5)
{
plot(master[[i]], pch = 16, main = y, xlab = "Day of Year", ylab = "Rs (µmol CO2/m2/s)")
#set custom x axis
axis(1, seq(0,365,50))
y = y+1
}
#number for starting year
y = 2014
#plot the 5 years
for (i in 1:5)
{
plot(master[[i]], pch = 16, main = y, xlab = "Day of Year", ylab = "Rs (µmol CO2/m2/s)")
#set custom x axis
axis(1, seq(0,365,5))
y = y+1
}
#number for starting year
y = 2014
#plot the 5 years
for (i in 1:5)
{
plot(master[[i]], pch = 16, main = y, xlab = "Day of Year", ylab = "Rs (µmol CO2/m2/s)")
#set custom x axis
axis(1, seq(0,365,25))
y = y+1
}
#number for starting year
y = 2014
#plot the 5 years
for (i in 1:5)
{
plot(master[[i]], pch = 16, main = y, xlab = "Day of Year", ylab = "Rs (µmol CO2/m2/s)")
#set custom x axis
axis(1, seq(0,365,25))
#set custom y axis
axis(2, seq(0,12,2))
y = y+1
}
#number for starting year
y = 2014
#plot the 5 years
for (i in 1:5)
{
plot(master[[i]], pch = 16, main = y, xlab = "Day of Year", ylab = "Rs (µmol CO2/m2/s)")
#set custom x axis
axis(1, seq(0,365,25))
#set custom y axis
axis(2, seq(0,12,2))
y = y+1
}
#number for starting year
year = 2014
#plot the 5 years
for (i in 1:5)
{
plot(master[[i]], pch = 16, main = year, xlab = "Day of Year", ylab = "Rs (µmol CO2/m2/s)")
#set custom x axis
axis(1, seq(0,365,25))
#set custom y axis
axis(2, seq(0,12,2))
y = y+1
}
#number for starting year
year = 2014
#plot the 5 years
for (i in 1:5)
{
plot(master[[i]], pch = 16, main = year, xlab = "Day of Year", ylab = "Rs (µmol CO2/m2/s)")
#set custom x axis
axis(1, seq(0,365,25))
#set custom y axis
axis(2, seq(0,12,2))
year = year+1
}
devtools::document()
load("E:/Insync/Classes/Geo - 712/Projects/Week 3/my-first-repo/plotRs/.RData")
load("E:/Insync/Classes/Geo - 712/Projects/Week 3/my-first-repo/plotRs/.RData")
devtools::document()
devtools::document()
devtools::document()
library(R.matlab)
devtools::document()
devtools::document()
library(R.matlab)
devtools::document()
install.packages("R.matlab")
install.packages("R.matlab")
library(R.matlab)
.libPaths()
library(R.matlab)
usethis::use_vignette("vignette-main")
devtools::document()
devtools::document()
devtools::document()
install.packages("R.matlab")
install.packages("R.matlab")
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
